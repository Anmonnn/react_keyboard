{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","isPressedKey","setIsPressedKey","useEffect","handleKeyPress","event","key","document","addEventListener","removeEventListener","className","ReactDOM","render","getElementById"],"mappings":"sLAEaA,EAAgB,WAC3B,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAcA,OAZAC,qBAAU,WACR,SAASC,EAAeC,GACtBH,EAAgBG,EAAMC,KAKxB,OAFAC,SAASC,iBAAiB,QAASJ,GAE5B,WACLG,SAASE,oBAAoB,QAASL,MAEvC,IAGD,qBAAKM,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BT,EAAY,mCAA+BA,EAA/B,KAAiD,+B,MCdhGU,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.aae4b479.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport const App: React.FC = () => {\n  const [isPressedKey, setIsPressedKey] = useState('');\n\n  useEffect(() => {\n    function handleKeyPress(event: KeyboardEvent) {\n      setIsPressedKey(event.key);\n    }\n\n    document.addEventListener('keyup', handleKeyPress);\n\n    return () => {\n      document.removeEventListener('keyup', handleKeyPress);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <p className=\"App__message\">{isPressedKey ? `The last pressed key is [${isPressedKey}]` : 'Nothing was pressed yet'}</p>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}