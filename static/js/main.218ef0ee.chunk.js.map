{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","isPressedKey","handleKeyPress","event","stopPropagation","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAEMA,E,4MACJC,MAAQ,CACNC,aAAc,I,EAWhBC,eAAiB,SAACC,GAChBA,EAAMC,kBACN,EAAKC,SAAS,CAAEJ,aAAcE,EAAMG,O,uDAVtC,WACEC,SAASC,iBAAiB,QAASC,KAAKP,kB,kCAG1C,WACEK,SAASG,oBAAoB,QAASD,KAAKP,kB,oBAQ7C,WACE,IAAQD,EAAiBQ,KAAKT,MAAtBC,aAER,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGV,EAAY,mCAA+BA,EAA/B,KAAiD,kC,GAxBtDW,aA+BHb,I,MC5Bfc,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.218ef0ee.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    isPressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyPress);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    event.stopPropagation();\n    this.setState({ isPressedKey: event.key });\n  };\n\n  render() {\n    const { isPressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {isPressedKey ? `The last pressed key is [${isPressedKey}]` : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}